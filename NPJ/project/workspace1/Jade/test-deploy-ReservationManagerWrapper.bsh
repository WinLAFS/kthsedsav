source("init"); 
import eu.grid4all.service.membership.*;
import eu.grid4all.service.reservation.*;
import eu.grid4all.service.negotiator.*;
import eu.grid4all.service.simplereservation.*;

print("Start deployment");
id=deploy("ReservationManagerWrapper");
print("End deployment");
c = lookupcomp("ReservationManagerWrapper_"+id);

/*
print("Connecting to a buyer");
ResourceBuyerIntf rb = new test.MyResourceBuyer();
bc=getitf(c, "binding-controller");
bc.bindFc("buyer", rb);
*/
print("Starting the Reservation Manager");

lc=getitf(c, "lifecycle-controller");
lc.startFc();


print("Invoking the Reservation Manager");

rMgr=getitf(c, "reservationManager");

MemberID arg0 = null;
now = System.currentTimeMillis();
Lease lease = new Lease(now, now + 3 * 1000, 3 * 1000);
ResourceDesc rdesc = new ResourceDesc(null, lease, 5);
arg1 = new ArrayList();
arg1.add(rdesc);

Budget arg2 = new Budget(9);
boolean arg3 = false;
Date arg4 = new Date(System.currentTimeMillis());
SimpleReservation rsv = null;
rsv = rMgr.requestReservation(arg0, arg1, arg2, arg3, arg4);
print(rsv);
print("Reservation details");
for (ResourceDesc rd: rsv.getReservationDescs()) {
	print("Reservation Desc: "+rd.toString());
}
for (SimpleResourceHolder rh: rsv.getResourceHolders()) {
	print("Holder with"+" SellerURL: "+ rh.getSellerURL()+ " SellerInfo: "+rh.getSellerInfo());
}
print("Reservation success: "+rsv.isSuccessful());



/*

// RNAadd some URL  and query

ref=org.objectweb.jasmine.jade.service.remotenodeaddition.RNAClient.addToVO("rmi://localhost:1099/RNAService", "localhost", 1238);
print(ref.getJadeNode());

// Obtain and invoke Basic resource management
jadeboot = lookupcomp("jadeboot");
        
basicRM = recsubcomp(jadeboot, "managed_resources/basicResourceManagement");
rm=getitf(basicRM, "basicResourceManagement");    
print(rm.query(ref,""));

myref=rm.getMyNode();
print(rm.query(myref,""));

*/

