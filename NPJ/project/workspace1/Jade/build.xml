<project name="Jade" default="testG4A-init4N">

	<!-- ================================== -->
	<!--    				Properties		          -->
	<!-- ================================== -->

	<property file="etc/build.properties" />
	<property file="etc/execute.properties" />

	<property name="etc" location="${basedir}/etc" />
	<property name="lib" location="${basedir}/lib" />
	<property name="externals" location="${basedir}/externals" />
	<property name="logs" location="${basedir}/logs" />

	<!-- ================================== -->
	<!--    			Initialization	          -->
	<!-- ================================== -->

	<condition property="paths.configured">
		<and>
			<isset property="jade-fractal.path" />
			<isset property="reflex-fractal.path" />
			<isset property="fractal-deployment-local.path" />
			<isset property="objectweb.ant.tasks.path" />
			<isset property="asm.path" />
			<isset property="jonathan.path" />
			<isset property="fractal.path" />
			<isset property="fractaladl.path" />
			<isset property="julia.path" />
			<isset property="fractalrmi.path" />
			<isset property="joram.path" />
			<isset property="oscar.path" />
			<isset property="bsh.path" />
			<isset property="dks.path" />
			<isset property="myhelloworld.path" />
			<isset property="yass.path" />
			<isset property="swt.path" />
			<isset property="reservation.path" />
		</and>
	</condition>

	<!-- - - - - - - - - - - - - - - - - - 
          target: check                      
         - - - - - - - - - - - - - - - - - -->
	<target name="check">
		<echo message="The 'build.properties' file must be configured" />
		<fail />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
	<target name="init" depends="check">
		<path id="classpath">

			<pathelement location="${etc}/oscar" />
			<pathelement location="${etc}/joram" />
			<pathelement location="${basedir}/examples" />

			<pathelement path="${lib}/jade.jar" />

			<pathelement path="${jade-fractal.path}" />
			<pathelement path="${reflex-fractal.path}" />
			<pathelement path="${fractal-deployment-local.path}" />

			<pathelement path="${objectweb.ant.tasks.path}" />
			<pathelement path="${asm.path}" />
			<pathelement path="${jonathan.path}" />
			<pathelement path="${fractal.path}" />
			<pathelement path="${fractaladl.path}" />
			<pathelement path="${fractalrmi.path}" />
			<pathelement path="${julia.path}" />

			<pathelement path="${joram.path}" />
			<pathelement path="${oscar.path}" />
			<pathelement path="${bsh.path}" />
			<pathelement path="${dks.path}" />
			<pathelement path="${myhelloworld.path}" />
			<pathelement path="${yass.path}" />
			<pathelement path="${swt.path}" />
			<pathelement path="${reservation.path}" />

		</path>

		<path id="oscar-classpath">

			<pathelement location="${etc}/oscar" />

			<pathelement path="${oscar.path}" />

		</path>

		<path id="beanshell-classpath">
			<path refid="classpath" />
			<pathelement path="${bundlejoram.path}" />
		</path>
	</target>

	<!-- ================================== -->
	<!--    Public execution TASKS          -->
	<!-- ================================== -->

	<target name="help">
		<echo message="--> jadeboot: start a JadeBoot" />
		<echo message="--> jadenode: start a JadeNode" />
		<echo message="--> beanshell_console : start a graphical console for Beanshell" />
	</target>


	<!-- ================================== -->
	<!--         JadeBoot (oscar)           -->
	<!-- ================================== -->

	<target name="jadeboot">
		<delete dir="${user.home}/.oscar" />
		<delete file="pos" />
		<mkdir dir="${logs}" />
		<java classname="${run.oscar.classname}" classpathref="oscar-classpath" fork="yes" failonerror="yes">
			<jvmarg line="${jvm.parameters.oscar.jadeboot}" />
		</java>
	</target>

	<!-- ================================== -->
	<!--         JadeNode (oscar)           -->
	<!-- ================================== -->

	<target name="jadenode">
		<mkdir dir="${logs}" />
		<java classname="${run.oscar.classname}" classpathref="oscar-classpath" fork="yes" failonerror="yes">
			<jvmarg line="${jvm.parameters.oscar.jadenode}" />
		</java>
	</target>
	
	<target name="jadenode4">
		<parallel>
			<antcall target="jadenode"></antcall>
					<antcall target="jadenode"></antcall>
					<antcall target="jadenode"></antcall>
					<antcall target="jadenode"></antcall>
		</parallel>
		
	</target>

	<!-- ====================================== -->
	<!-- 					BeanShell Console             -->
	<!-- ====================================== -->
	<target name="beanshell_console">
		<java classname="${run.beanshell-gui.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 					testG4A-run-apache -->
	<!-- ====================================== -->
	<target name="testG4A-run-apache">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-MyApache.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 			testG4A-NicheHelloWorld-Deploy         -->
	<!-- ====================================== -->
	<target name="testG4A-NicheHelloWorld-Deploy">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="NicheHelloWorld-Deploy.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>
	
	<target name="testG4A-NicheCounter-Deploy">
			<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
				<arg line="NicheCounter-Deploy.bsh" />
				<jvmarg line="${jvm.parameters}" />
			</java>
		</target>

	<!-- ====================================== -->
	<!-- 			testG4A-NicheHelloWorld-Start         -->
	<!-- ====================================== -->
	<target name="testG4A-NicheHelloWorld-Start">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="NicheHelloWorld-Start.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>
	
	<target name="testG4A-NicheCounterStart">
			<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
				<arg line="NicheCounter-Start.bsh" />
				<jvmarg line="${jvm.parameters}" />
			</java>
		</target>
	<!-- ====================================== -->
	<!-- 					testG4A-run-yass-original -->
	<!-- ====================================== -->
	<target name="testG4A-run-yass-original">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-Yass-original.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 					testG4A-run-yass -->
	<!-- ====================================== -->
	<target name="testG4A-run-yass-run">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-Yass-run.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 			testG4A-Yass-Deploy         -->
	<!-- ====================================== -->
	<target name="testG4A-Yass-Deploy">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="Yass-Deploy.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 			testG4A-Yass-Start         -->
	<!-- ====================================== -->
	<target name="testG4A-Yass-Start">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="Yass-Start.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>



	<!-- ====================================== -->
	<!-- 					testG4A-init1N-->
	<!-- ====================================== -->
	<target name="testG4A-init1N">


		<sequential>
			<delete dir="${user.home}/.oscar" />
			<delete file="pos" />
			<parallel>
				<antcall target="jadeboot" />
				<sequential>
					<sleep seconds="15" />
					<antcall target="jadenode" />
				</sequential>
			</parallel>
		</sequential>
	</target>
	<!-- ====================================== -->
	<!-- 					testG4A-init-->
	<!-- ====================================== -->
	<target name="testG4A-init">

		<delete dir="${user.home}/.oscar" />
		<delete file="pos" />
	</target>

	<!-- ====================================== -->
	<!-- 					testG4A-init0N-->
	<!-- ====================================== -->
	<target name="testG4A-init0N">

		<delete dir="${user.home}/.oscar" />
		<delete file="pos" />
		<antcall target="jadeboot" />

	</target>
	<!-- ====================================== -->

	<!-- 					testG4A-init2N-->
	<!-- ====================================== -->
	<target name="testG4A-init2N">


		<sequential>
			<delete dir="${user.home}/.oscar" />
			<delete file="pos" />
			<parallel>
				<antcall target="jadeboot" />
				<sequential>
					<sleep seconds="25" />
					<parallel>
						<antcall target="jadenode" />
						<sequential>
							<sleep seconds="12" />
							<parallel>
								<antcall target="jadenode" />
							</parallel>
						</sequential>
					</parallel>
				</sequential>
			</parallel>
		</sequential>
	</target>

	<!-- ====================================== -->
	<!-- 					testG4A-init4N-->
	<!-- ====================================== -->
	<target name="testG4A-init4N">


		<sequential>
			<delete dir="${user.home}/.oscar" />
			<delete file="pos" />
			<parallel>
				<antcall target="jadeboot" />
				<sequential>
					<sleep seconds="25" />
					<parallel>
						<antcall target="jadenode" />
						<sequential>
							<sleep seconds="25" />
							<parallel>
								<antcall target="jadenode" />
								<sequential>
									<sleep seconds="25" />
									<antcall target="jadenode" />
								</sequential>
							</parallel>
						</sequential>
					</parallel>
				</sequential>
			</parallel>
		</sequential>
	</target>

	<!-- ====================================== -->
	<!-- 		 	testG4A-run-MyHelloGroup -->
	<!-- ====================================== -->
	<target name="testG4A-run-MyHelloGroup">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-MyHelloGroup.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 	    testG4A-run-MyHelloCardinality -->
	<!-- ====================================== -->
	<target name="testG4A-run-MyHelloCardinality">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-MyHelloCardinality.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 			   testG4A-run-TomcatWrapper-->
	<!-- ====================================== -->
	<target name="testG4A-run-TomcatWrapper">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-TomcatWrapper.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 				testG4A-run-JettyWrapper-->
	<!-- ====================================== -->
	<target name="testG4A-run-JettyWrapper">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-JettyWrapper.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 		   testG4A-run-FractalHelloWorldWrapper-->
	<!-- ====================================== -->
	<target name="testG4A-run-FractalHelloWorldWrapper">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-FractalHelloWorldWrapper.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 		   testG4A-run-SimpleWrapper-->
	<!-- ====================================== -->
	<target name="testG4A-run-SimpleWrapper">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-SimpleWrapper.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 		   testG4A-run-SimpleWrapperClient-->
	<!-- ====================================== -->
	<target name="testG4A-run-SimpleWrapperClient">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-SimpleWrapperClient.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 		   testG4A-RemoteMethodAdditionClient-->
	<!-- ====================================== -->
	<target name="testG4A-RemoteMethodAdditionClient">
		<java classname="org.objectweb.jasmine.jade.service.remotenodeaddition.RNAClient" fork="yes" failonerror="no">
			<!-- RNAhost RNAport RNAname VOHost VOport -->
			<arg line="proton.inrialpes.fr 1099 RNAService neodyme.inrialpes.fr 1238"/>
			<classpath>
				<pathelement path="${lib}/jade.jar" />
				<pathelement path="${dks.path}" />
			</classpath>
		</java>
	</target>

	<!-- ====================================== -->
	<!-- 		   testG4A-run-ReservationManagerWrapper-->
	<!-- ====================================== -->
	<target name="testG4A-run-ReservationManagerWrapper">
		<java classname="${run.beanshell-console.classname}" classpathref="beanshell-classpath" fork="yes" failonerror="no">
			<arg line="test-deploy-ReservationManagerWrapper.bsh" />
			<jvmarg line="${jvm.parameters}" />
		</java>
	</target>

</project>
