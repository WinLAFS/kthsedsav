
package recruitmentClient;

import java.util.List;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RecruiterCompany", targetNamespace = "http://recruitercompany/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RecruiterCompany {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<recruitmentClient.FindJobsResponse>
     */
    @WebMethod(operationName = "findJobs")
    @RequestWrapper(localName = "findJobs", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobs")
    @ResponseWrapper(localName = "findJobsResponse", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobsResponse")
    public Response<FindJobsResponse> findJobsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "findJobs")
    @RequestWrapper(localName = "findJobs", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobs")
    @ResponseWrapper(localName = "findJobsResponse", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobsResponse")
    public Future<?> findJobsAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<FindJobsResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findJobs", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobs")
    @ResponseWrapper(localName = "findJobsResponse", targetNamespace = "http://recruitercompany/", className = "recruitmentClient.FindJobsResponse")
    @Action(input = "http://recruitercompany/RecruiterCompany/findJobsRequest", output = "http://recruitercompany/RecruiterCompany/findJobsResponse")
    public String findJobs(
        @WebParam(name = "arg0", targetNamespace = "")
        List<String> arg0);

}
