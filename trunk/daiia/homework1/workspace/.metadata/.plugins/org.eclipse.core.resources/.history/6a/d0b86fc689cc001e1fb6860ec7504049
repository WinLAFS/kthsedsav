package se.kth.ict.daiia09.company;

import java.util.ArrayList;

import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;
import jade.core.behaviours.OneShotBehaviour;
import jade.core.behaviours.ParallelBehaviour;
import jade.core.behaviours.SequentialBehaviour;
import jade.lang.acl.ACLMessage;
import jade.lang.acl.MessageTemplate;

/*
 * the inventory/monitoring agent
 * keeps track of the availability of laptop items
 * and the shipping days that they need
 * 
 * parameters:
 * 	-Int, 1 or 2, in order to load the data for company 1 or 2
 */
public class InventoryMonitoringAgent extends Agent {
	//the list keeping the info about the available laptops
	private ArrayList<LaptopBrand> laptopBrandArrayList = new ArrayList<LaptopBrand>();
	
	public void setup() {
		System.out.println("Inventory/monitoring agent " + getAID().getName() + " started.");
		
		//if user didn't pass startup param or passed param != 1
		Boolean defaultLoading = true;
		
		Object[] args = getArguments();
		if (args != null && args.length > 0) {
			if (((String) args[0]).equals("1")) {
				System.out.println("Loading data for company 1");
				laptopBrandArrayList.add(new LaptopBrand("LG", 12, 9));
				laptopBrandArrayList.add(new LaptopBrand("Sony", 3, 5));
				laptopBrandArrayList.add(new LaptopBrand("Mac", 1, 15));
				laptopBrandArrayList.add(new LaptopBrand("Lenovo", 22, 3));
				defaultLoading = false;
			}
		}
		
		if (defaultLoading) {
			System.out.println("Loading data for company 2");
			laptopBrandArrayList.add(new LaptopBrand("LG", 4, 7));
			laptopBrandArrayList.add(new LaptopBrand("Sony", 4, 5));
			laptopBrandArrayList.add(new LaptopBrand("Dell", 1, 3));
			laptopBrandArrayList.add(new LaptopBrand("Siemens", 2, 15));
		}
		
		addBehaviour(new CyclicBehaviour(this) {
			
			public void action() {
				
				//first check for availability request
				ACLMessage incomingMsg = myAgent.receive(mtQueryShippingDate);
				if (incomingMsg != null) {
					System.out.println("---------------------------------------------------");
					System.out.println("request-when        Received msg: " + incomingMsg.getContent());
					System.out.println("---------------------------------------------------");
				} 
				else {
					block();
				}
			
		});
	}
	
	/*
	 * inner class LaptopBrand keeping the data regarding the laptops
	 */
	private class LaptopBrand {
		private String name = null;
		private int availableItems = 2;
		private int shippingDays = 7;
		
		public LaptopBrand(String name, int availableItems, int shippingDays) {
			super();
			this.name = name;
			this.availableItems = availableItems;
			this.shippingDays = shippingDays;
		}
		
		public String getName() {
			return name;
		}
		public void setName(String name) {
			this.name = name;
		}
		public int getAvailableItems() {
			return availableItems;
		}
		public void setAvailableItems(int availableItems) {
			this.availableItems = availableItems;
		}
		public int getShippingDays() {
			return shippingDays;
		}
		public void setShippingDays(int shippingDays) {
			this.shippingDays = shippingDays;
		}
	}
}
